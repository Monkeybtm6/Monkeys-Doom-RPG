#library "PlayerScript"
#include "zcommon.acs"
#define PLAYER_TID_START 1000
#define PLAYER_MAX_HEALTH_ADD 4
#define atkbase 0.05
#define defbase 1
#define STRbase 1
#define AGIbase 0.2
#define DAMAGE_COUNTPERCENT 0.05
#define MaxLevel 60
int LevelNext[MaxLevel];

script 90 ENTER
{
  Thing_ChangeTID(0,PLAYER_TID_START+PlayerNumber());
  ACS_NamedExecuteAlways("UpdateStats",0);
}

script 91 RESPAWN
{
  Thing_ChangeTID(PLAYER_TID_START+PlayerNumber(),0);
  Thing_ChangeTID(0,PLAYER_TID_START+PlayerNumber());
  delay(1);
  ACS_NamedExecuteAlways("UpdateStats",0);
}

Script "Levelupcheck" (int EXPA)
{
GiveInventory("Expereince", EXPA);

int EXP = CheckInventory("Expereince");
int Lvl = CheckInventory("Playerlevel");
   
   if(EXP >= (100 * Lvl))
   {
      GiveInventory("Playerlevel", 1);
      TakeInventory("Expereince",(100 * lvl));
      ACS_NamedExecuteAlways("UpdateStats",0);
   }

}

Script "UpdateStats" (void)
{
  int StartHealth = CheckInventory("StatVIT") * 20;
  int Player_Max_Health_in = CheckInventory("StatVIT") * CheckInventory("PlayerLevel");
  int Player_Max_Health_Out = ((PLAYER_MAX_HEALTH_in * 2) + StartHealth);
  SetActorProperty(PLAYER_TID_START+PlayerNumber(), APROP_SPAWNHEALTH, Player_Max_Health_Out);
  if (getactorproperty(PLAYER_TID_START+PlayerNumber(), APROP_HEALTH) <= Player_Max_Health_Out)
     {
	 SetActorProperty(PLAYER_TID_START+PlayerNumber(), APROP_HEALTH, Player_Max_Health_out);
     }
  int mySTR = CheckInventory("StatSTR") * CheckInventory("PlayerLevel");
  int ClipAdd = (mySTR * 4);
  int ShellAdd = (mySTR * 2);
  int RocketAdd = (mySTR * 2);
  int CellAdd = (mySTR * 6);
	
  SetAmmoCapacity("Clip", 200 + ClipAdd);
  SetAmmoCapacity("Shell", 50 + ShellAdd);
  SetAmmoCapacity("RocketAmmo", 50 + RocketAdd);
  SetAmmoCapacity("Cell", 300 + CellAdd);
  SetActorProperty(PLAYER_TID_START+PlayerNumber(), APROP_Speed, (AGIBase * CheckInventory("StatAGI")) );
  
  
  Log(s:"Stats Refreshed for ");
  Log(f: PlayerNumber());

}

script "playerstart" (void)
{
	int myatk = atkbase * CheckInventory("PlayerLevel");
	int mydef = defbase * CheckInventory("PlayerLevel");
	int mySTR = STRbase * CheckInventory("PlayerLevel");
}

script "DAMAGESCR" (int indamage)
{
	int levelchecker = CheckInventory("StatATK") * CheckInventory("Playerlevel");
	int counter = DAMAGE_COUNTPERCENT * levelchecker;
    int outdamage = indamage * (1.0 + counter);
	setresultvalue(outdamage >> 16);
	//print(f: outdamage);
	
}

script "PROJDAMAGESCR" (int indamage)
{
	SetActivatorToTarget(0);
	int atkchecker = CheckInventory("StatATK");
	int levelchecker = atkchecker * CheckInventory("Playerlevel");
	int counter = DAMAGE_COUNTPERCENT * levelchecker;
    int outdamage = indamage * (1.0 + counter);
	setresultvalue(outdamage >> 16);
	//print(f: outdamage);
	
}

script "ArmorSCR" (int Gainedarmor)
{
    int maxarmor = (Checkinventory("StatDEF") * Checkinventory("Playerlevel"));
	if (Checkinventory("armor") <= Maxarmor + 100)
	{
	    GiveInventory("armor", Gainedarmor);
	}

}